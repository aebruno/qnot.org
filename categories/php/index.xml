<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP on </title>
    <link>https://qnot.org/categories/php/</link>
    <description>Recent content in PHP on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Apr 2011 05:05:18 +0000</lastBuildDate>
    
	<atom:link href="https://qnot.org/categories/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>WordPress Blog to Print Book - A Case Study</title>
      <link>https://qnot.org/2011/04/09/wordpress-blog-to-print-book-a-case-study/</link>
      <pubDate>Sat, 09 Apr 2011 05:05:18 +0000</pubDate>
      
      <guid>https://qnot.org/2011/04/09/wordpress-blog-to-print-book-a-case-study/</guid>
      <description>&lt;p&gt;In this post I discuss my experience converting a WordPress blog into a print
book. This is by no means a generic how-to guide but more along the lines of a
case study. There&#39;s a number of ways one could tackle this problem however I
wasn&#39;t able to find any existing methods that fit my needs. Specifically, I
wanted to convert the content of a WordPress blog into a high quality print
ready PDF book (complete with chapters, sections, table of contents, images,
figures, page numbering, index, etc.) which could then be sent to various
&lt;a href=&#34;http://en.wikipedia.org/wiki/Print_on_demand&#34;&gt;POD&lt;/a&gt; publishers such as
&lt;a href=&#34;http://www.lulu.com/&#34;&gt;Lulu&lt;/a&gt; for printing.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>phpLDAPadmin and Kerberos</title>
      <link>https://qnot.org/2007/06/27/phpldapadmin-and-kerberos/</link>
      <pubDate>Wed, 27 Jun 2007 02:56:55 +0000</pubDate>
      
      <guid>https://qnot.org/2007/06/27/phpldapadmin-and-kerberos/</guid>
      <description>&lt;p&gt;I&#39;ve been experimenting with
&lt;a href=&#34;http://phpldapadmin.sourceforge.net/&#34;&gt;phpLDAPadmin&lt;/a&gt; for browsing/searching
LDAP directories over the web and found it to be a wonderful tool. I&#39;m
currently working with LDAP in a central authentication system together with
Kerberos and wanted to have a nice web interface for managing user information
within the LDAP directory. phpLDAPadmin provides a very nice interface for
browsing, searching, and updating entries which makes it a bit easier than
working with the ldap* command line tools. Here&#39;s my basic setup of
phpLDAPadmin using Kerberos for authentication. This assumes you already have
an LDAP/Kerberos setup working and are using Apache as your web server.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>