<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on </title>
    <link>http://qnot.org/categories/java/</link>
    <description>Recent content in Java on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Apr 2012 02:31:54 +0000</lastBuildDate>
    
	<atom:link href="http://qnot.org/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Counting the number of reads in a BAM file</title>
      <link>http://qnot.org/2012/04/14/counting-the-number-of-reads-in-a-bam-file/</link>
      <pubDate>Sat, 14 Apr 2012 02:31:54 +0000</pubDate>
      
      <guid>http://qnot.org/2012/04/14/counting-the-number-of-reads-in-a-bam-file/</guid>
      <description>&lt;p&gt;The output from short read aligners like
&lt;a href=&#34;http://bowtie-bio.sourceforge.net/index.shtml&#34;&gt;Bowtie&lt;/a&gt; and
&lt;a href=&#34;http://bio-bwa.sourceforge.net/&#34;&gt;BWA&lt;/a&gt; is commonly stored in
&lt;a href=&#34;http://samtools.sourceforge.net/&#34;&gt;SAM/BAM&lt;/a&gt; format. When presented with one of
these files a common first task is to calculate the total number of alignments
(reads) captured in the file. In this post I show some examples for finding the
total number of reads using samtools and directly from Java code.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>passtab - store passwords in your wallet</title>
      <link>http://qnot.org/2011/07/01/passtab-store-passwords-in-your-wallet/</link>
      <pubDate>Fri, 01 Jul 2011 04:15:21 +0000</pubDate>
      
      <guid>http://qnot.org/2011/07/01/passtab-store-passwords-in-your-wallet/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a quote from &lt;a href=&#34;http://www.schneier.com/blog/archives/2005/06/write_down_your.html&#34;&gt;Bruce
Schneier&lt;/a&gt;
that essentially sums up the motivation for this post:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We&amp;rsquo;re all good at securing small pieces of paper. I recommend that people write
their passwords down on a small piece of paper, and keep it with their other
valuable small pieces of paper: in their wallet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I recently read an excellent &lt;a href=&#34;http://blog.jgc.org/2010/12/write-your-passwords-down.html&#34;&gt;blog
post&lt;/a&gt; by John
Graham-Cumming in which he presents a elegant system for writing down your
passwords using a &lt;a href=&#34;http://en.wikipedia.org/wiki/Tabula_recta&#34;&gt;Tabula Recta&lt;/a&gt;. I
was inspired by this concept so I created a tool called
&lt;a href=&#34;https://github.com/aebruno/passtab&#34;&gt;passtab&lt;/a&gt; which aims to provide a
light-weight system for managing passwords based on his idea.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating executable jars with Maven</title>
      <link>http://qnot.org/2008/01/25/creating-executable-jars-with-maven/</link>
      <pubDate>Fri, 25 Jan 2008 04:53:16 +0000</pubDate>
      
      <guid>http://qnot.org/2008/01/25/creating-executable-jars-with-maven/</guid>
      <description>&lt;p&gt;After wrestling with &lt;a href=&#34;http://maven.apache.org/plugins/maven-assembly-plugin/&#34;&gt;Maven
assemblies&lt;/a&gt; for while I
finally figured out how to build executable jars. The Maven assembly plugin
allows you to define ways to package up your project for distribution by
creating various assembly descriptor files.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rotate Labels JFreeChart</title>
      <link>http://qnot.org/2007/08/15/rotate-labels-jfreechart/</link>
      <pubDate>Wed, 15 Aug 2007 03:06:55 +0000</pubDate>
      
      <guid>http://qnot.org/2007/08/15/rotate-labels-jfreechart/</guid>
      <description>&lt;p&gt;When creating a chart that has rather long labels for the x-axis it is
sometimes desirable to rotate them a bit so they fit on the plot. The method to
use is &lt;code&gt;setCategoryLabelPositions(..)&lt;/code&gt; on the &lt;code&gt;CategoryAxis&lt;/code&gt; class.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL bigint types and iBATIS</title>
      <link>http://qnot.org/2007/07/16/mysql-bigint-types-and-ibatis/</link>
      <pubDate>Mon, 16 Jul 2007 21:22:37 +0000</pubDate>
      
      <guid>http://qnot.org/2007/07/16/mysql-bigint-types-and-ibatis/</guid>
      <description>&lt;p&gt;One nuance I recently ran into while using &lt;a href=&#34;http://ibatis.apache.org/&#34;&gt;iBATIS&lt;/a&gt;
was inserting data into &lt;a href=&#34;http://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt; bigint unsigned columns.
iBATIS doesn&amp;rsquo;t seem to have a way to handle BigInteger data types and throws an
exception when attempting to do an insert. Fetching data out seemed to work OK
because if iBATIS doesn&amp;rsquo;t know how to handle a certain type it just returns a
java.lang.Object. The way to go about inserting BigInteger types is to set up a
type handler. Here&amp;rsquo;s an example type handler for BigInteger types:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Converting MIF to XML - Java Version</title>
      <link>http://qnot.org/2007/02/01/converting-mif-to-xml-java-version/</link>
      <pubDate>Thu, 01 Feb 2007 03:57:01 +0000</pubDate>
      
      <guid>http://qnot.org/2007/02/01/converting-mif-to-xml-java-version/</guid>
      <description>&lt;p&gt;In my &lt;a href=&#34;http://qnot.org/2007/01/25/converting-mif-to-xml/&#34;&gt;previous post&lt;/a&gt; I discussed a
tool called &lt;code&gt;mif2xml&lt;/code&gt; for converting MIF files to an intermediate XML dialect.
In this post I&amp;rsquo;ll talk about the Java port of &lt;code&gt;mif2xml&lt;/code&gt; called &lt;code&gt;mif2xml-j&lt;/code&gt;
which you can download &lt;a href=&#34;https://github.com/aebruno/mif2xml-j&#34;&gt;here&lt;/a&gt; including
just the &lt;a href=&#34;https://github.com/downloads/aebruno/mif2xml-j/mif2xml-0.3.jar&#34;&gt;executable
jar&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating Sparklines with JFreeChart</title>
      <link>http://qnot.org/2007/01/15/creating-sparklines-with-jfreechart/</link>
      <pubDate>Mon, 15 Jan 2007 08:05:01 +0000</pubDate>
      
      <guid>http://qnot.org/2007/01/15/creating-sparklines-with-jfreechart/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Sparkline&#34;&gt;Sparklines&lt;/a&gt; are very small charts
usually displayed along side some text and help quickly compare time series
data. They are usually rendered without any axis, labels, or tick marks and
appear as just a simple line. Sparklines were developed by &lt;a href=&#34;http://www.edwardtufte.com/&#34;&gt;Edward
Tufte&lt;/a&gt; and further explained
&lt;a href=&#34;http://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=0001OR&amp;amp;topic_id=1&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>