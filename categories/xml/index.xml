<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>XML on </title>
    <link>https://qnot.org/categories/xml/</link>
    <description>Recent content in XML on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Apr 2011 05:05:18 +0000</lastBuildDate>
    
	<atom:link href="https://qnot.org/categories/xml/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>WordPress Blog to Print Book - A Case Study</title>
      <link>https://qnot.org/2011/04/09/wordpress-blog-to-print-book-a-case-study/</link>
      <pubDate>Sat, 09 Apr 2011 05:05:18 +0000</pubDate>
      
      <guid>https://qnot.org/2011/04/09/wordpress-blog-to-print-book-a-case-study/</guid>
      <description>&lt;p&gt;In this post I discuss my experience converting a WordPress blog into a print
book. This is by no means a generic how-to guide but more along the lines of a
case study. There&#39;s a number of ways one could tackle this problem however I
wasn&#39;t able to find any existing methods that fit my needs. Specifically, I
wanted to convert the content of a WordPress blog into a high quality print
ready PDF book (complete with chapters, sections, table of contents, images,
figures, page numbering, index, etc.) which could then be sent to various
&lt;a href=&#34;http://en.wikipedia.org/wiki/Print_on_demand&#34;&gt;POD&lt;/a&gt; publishers such as
&lt;a href=&#34;http://www.lulu.com/&#34;&gt;Lulu&lt;/a&gt; for printing.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MIF XML at O&#39;Reilly</title>
      <link>https://qnot.org/2007/02/05/mif-xml-at-oreilly/</link>
      <pubDate>Mon, 05 Feb 2007 05:08:51 +0000</pubDate>
      
      <guid>https://qnot.org/2007/02/05/mif-xml-at-oreilly/</guid>
      <description>Keith, a fellow O&#39;Reillyer, has written a few posts on how O&#39;Reilly has been making use of MIF XML (MX). Keith gives some background and example uses as a follow up to my previous posts on converting MIF to XML. He also posted some XSLT for round-tripping the XML back into MIF.</description>
    </item>
    
    <item>
      <title>Converting MIF to XML - Java Version</title>
      <link>https://qnot.org/2007/02/01/converting-mif-to-xml-java-version/</link>
      <pubDate>Thu, 01 Feb 2007 03:57:01 +0000</pubDate>
      
      <guid>https://qnot.org/2007/02/01/converting-mif-to-xml-java-version/</guid>
      <description>&lt;p&gt;In my &lt;a href=&#34;https://qnot.org/2007/01/25/converting-mif-to-xml/&#34;&gt;previous post&lt;/a&gt; I discussed a
tool called &lt;code&gt;mif2xml&lt;/code&gt; for converting MIF files to an intermediate XML dialect.
In this post I&#39;ll talk about the Java port of &lt;code&gt;mif2xml&lt;/code&gt; called &lt;code&gt;mif2xml-j&lt;/code&gt;
which you can download &lt;a href=&#34;https://github.com/aebruno/mif2xml-j&#34;&gt;here&lt;/a&gt; including
just the &lt;a href=&#34;https://github.com/downloads/aebruno/mif2xml-j/mif2xml-0.3.jar&#34;&gt;executable
jar&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Converting MIF to XML</title>
      <link>https://qnot.org/2007/01/25/converting-mif-to-xml/</link>
      <pubDate>Thu, 25 Jan 2007 08:39:43 +0000</pubDate>
      
      <guid>https://qnot.org/2007/01/25/converting-mif-to-xml/</guid>
      <description>&lt;p&gt;MIF (Maker Interchange Format) is an ASCII text representation of a
&lt;a href=&#34;http://en.wikipedia.org/wiki/FrameMaker&#34;&gt;FrameMaker&lt;/a&gt; document. You can export
your FrameMaker documents into this text based representation to allow for
parsing and manipulation by external tools outside of FrameMaker. You can also
import MIF files back into FrameMaker. If your interested in reading more about
MIF you can check out the &lt;a href=&#34;http://partners.adobe.com/public/developer/en/framemaker/MIF_Reference.pdf&#34;&gt;MIF
Reference&lt;/a&gt;
from Adobe (link may be out of date).&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>